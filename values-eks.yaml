# This values-eks.yaml file will allow you to customize the Integrify installation to your specific needs.
# You will need to update the following parameters at a minimum...
# frontend: host: name

# Application Parameters
appName: integrify-eks

host:
  name: integrify.yourdomain.demo

globalEnv:
  - name: PORTAL_URL
    value: "http://integrify.demo"
  - name: CONSOLE_LOG_FORMAT
    value: text
  - name:  ENV_PLATFORM
    value: kubernetes

secrets:
  awsCreds: {"accessKeyId": "YOUR_ACCESS_KEY_ID", "secretAccessKey": "YOUR_SECRET_ACCESS_KEY", "region": "us-east-1"} # Example key. You should replace with your own AWS creds.
  integrifyEnvToken: 12345678-1234-1234-1234-123456789ABC # Example key. You should replace with your own ENV key.
  redisConn: {"host":"redis.yourdomain.demo", "port": 6379} # Change host to your Redis server
  recapthchaSecurityKey: 12345678-1234-1234-1234-123456789ABC # Example key. You should replace with your own recaptcha key.

config:
  portalUrl: "http://integrify.demo"
  consumersConn: data source=sql.yourdomain.demo;database=CONSUMERS_DATABASE_NAME;user id=DATABASE_USER_ID;password=DATABASE_USER_PASSWORD;
  logger:
    activeConfig: debug
    rootPath: ./logs
    fileDateFormat: YYYY_MM_DD
    production: {}
    debug:
      error:
        transport:
          - console
        color: red
        path: "/{date}_error_{source}.log"
        include:
          - stack
          - module
        disabled: false
      warning:
        transport:
          - console
        color: yellow
        path: "/{date}_warning_{source}.log"
        disabled: false
      info:
        transport:
          - console
        color: green
        path: "/{date}_info_{source}.log"
        disabled: false
      milestone:
        transport:
          - console
        color: white
        disabled: false
      session:
        transport:
          - console
        format: session_stats
        path: "/{date}_session_stats_{source}.log"
        disabled: false
      console:
        disabled: false
  mongo:
    connectionString: "mongodb://mongo.yourdomain.demo:27017" # Change host to your mongo server
    options:
      useUnifiedTopology: true
      useNewUrlParser: true
      useCreateIndex: true
      poolSize: 10
      keepAlive: true
  client:
    endpointSecurityChecks: true
    max_sockets: 5000
    port: 3508
    requestDetailCacheMinutes: 30
    core_service_root: "http://integrify.demo/core-service"
  service:
    task_processor_interval: 1
    querygen_trace: "false"
    debug_logs: "off"
    TimeZoneIndex: "20"
  jwtSecret: "12345678-1234-1234-1234-123456789ABC" # Example key. You should update with your own secret
  expiresInUnit: days
  expiresInAmount: 5

# Image Parameters
image:
  repo: 940767003169.dkr.ecr.us-east-1.amazonaws.com
  pullPolicy: Always
  # Pull policy options are IfNotPresent, Always, Never. 
  # Image pull information can be found here - https://kubernetes.io/docs/concepts/containers/images/

# Ingress Parameters
ingress:
  annotations: # Add or remove annontations below to fit your needs
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    #alb.ingress.kubernetes.io/healthcheck-path: /healthcheck
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    #HTTPS/Certificate settings
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:111122223333:certificate/11112222-aaaa-bbbb-cccc-3333dddd4444 # Update to your certificate ARN
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'

# Services information
auth:
  name: api-auth
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3502
  restart: Always
  healthcheck: /api/auth/healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

client:
  name: client
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3508
  restart: Always
  healthcheck: /healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

configProcessor:
  name: config-processor
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  restart: Always
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

coreService:
  name: core-service
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 5000
  restart: Always
  healthcheck: /healthcheck
  env:
  - name: MIN_THREADS
    value: "150"
  - name: REQUEST_LOGGING
    value: "off"
  resources:
    requests:
      cpu: "1"
      memory: "2Gi"
    limits:
      cpu: "1"
      memory: "4Gi"

dashboards:
  name: api-dashboards
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3522
  restart: Always
  healthcheck: /api/dashboards/healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

files:
  name: api-files
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3509
  volMountPath: /usr/src/app/files
  restart: Always
  volSize: 250M
  hostPath: /data/files
  access: ReadWriteOnce
  healthcheck: /api/files/healthcheck
  env:
  - name: FILE_STORE
    value: '/integrify/files'  
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

forms:
  name: api-forms
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3524
  restart: Always
  healthcheck: /api/forms/healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

instance:
  name: api-instance
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3518
  restart: Always
  healthcheck: /api/instance/healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

integrations:
  name: api-integrations
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3526
  restart: Always
  healthcheck: /api/integrations/healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

processes:
  name: api-processes
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3525
  restart: Always
  healthcheck: /api/processes/healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

reports:
  name: api-reports
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3523
  restart: Always
  healthcheck: /api/reports/healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

scheduler:
  name: scheduler
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3504
  restart: Always
  healthcheck: /api/scheduler/healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

sessionProcessor:
  name: session-processor
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  restart: Always
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

settings:
  name: api-settings
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3503
  restart: Always
  healthcheck: /api/settings/healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

ssp:
  name: single-spa-portal
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3000
  restart: Always
  healthcheck: /
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

taskDispatcher:
  name: api-task-dispatcher
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3519
  restart: Always
  healthcheck: /api/task-dispatcher/healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

taskProcessor:
  name: core-service-tp
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  restart: Always
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

tenant:
  name: api-tenant
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3505
  restart: Always
  healthcheck: /api/tenant/healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"

user:
  name: api-user
  minReplicas: 1
  maxReplicas: 3
  avgMemUtilization: 50
  tag: Prod
  port: 3521
  restart: Always
  healthcheck: /api/user/healthcheck
  resources:
    requests:
      cpu: ".25"
      memory: "0.5Gi"
    limits:
      cpu: ".5"
      memory: "1Gi"